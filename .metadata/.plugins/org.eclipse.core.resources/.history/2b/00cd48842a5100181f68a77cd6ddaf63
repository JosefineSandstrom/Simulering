import java.util.*;

public class Dispatch extends Proc{

	//The random number generator is started:
	Random slump = new Random();
	public Proc sendTo;    //Where to send customers
	public QS Q1, Q2, Q3, Q4, Q5;
	public int noCustomers, noInQ1, noInQ2, noInQ3, noInQ4, noInQ5;
	public List<Integer> list = new ArrayList<Integer>();

	int x = 5;
	list.add(x);
	//list.add((int) noInQ1);
	
	public void TreatSignal(Signal x) {
		switch (x.signalType){
		case ARRIVAL:{
			
			//Algorithm 1: Random
			int temp = 1 + slump.nextInt(4);
			if (temp == 1){
				sendTo = Q1;
			} else if (temp == 2){
				sendTo = Q2;
			} else if (temp == 3){
				sendTo = Q3;
			} else if (temp == 4){
				sendTo = Q4;
			} else if (temp == 5){
				sendTo = Q5;
			}
			
			//Algorithm 2: Round Robin
			noCustomers++;
			temp = noCustomers % 5;
			if (temp == 1){
				sendTo = Q1;
			} else if (temp == 2){
				sendTo = Q2;
			} else if (temp == 3){
				sendTo = Q3;
			} else if (temp == 4){
				sendTo = Q4;
			} else if (temp == 0){
				sendTo = Q5;
			}
						
			//Algorithm 3: Shortest queue
			int min = noInQ1;
			int i = 1;
			
			
			
			SignalList.SendSignal(ARRIVAL, sendTo, time);
			break;
		}
		
		}
	}

	int compareTo(int x, int y){
		if(x > y){
			return 1;
		} else if (x == y){
			return 0;
		} else {
			return -1;
		}
	}
}

