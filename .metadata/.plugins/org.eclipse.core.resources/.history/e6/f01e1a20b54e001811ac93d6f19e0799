import java.util.*;
import java.io.*;

class State2{
	public int AinQueue = 0, BinQueue = 0, accumulated = 0, noMeasurements = 0;
	public double xA = 0.002, xB = 0.004, lambda = 150, d = 1;

	Random slump = new Random();
	//SimpleFileWriter W = new SimpleFileWriter("number.m", false);

	public void TreatEvent(Event x){
		switch (x.eventType){
		case G2.arrivalA:{
			AinQueue++;
			if (BinQueue == 1){
				System.out.println("Arrival A BinQueue" + G2.time);
				EventList.InsertEvent(G2.departureB, G2.time + xB);
			}
			if (AinQueue == 1){
				System.out.println("Arrival A AinQueue" + G2.time);
				EventList.InsertEvent(G2.departureA, G2.time + xA);
			}
			EventList.InsertEvent(G2.arrivalA, G2.time - (1.0/150)*Math.log(slump.nextDouble())); 				
		} break;
		case G2.arrivalB:{
			System.out.println("Arrival B" + G2.time);
			BinQueue++;
			if (BinQueue == 1){
				EventList.InsertEvent(G2.departureB, G2.time + xB);
			}
			if (AinQueue == 1){
				EventList.InsertEvent(G2.departureA, G2.time + xA);
			}
			EventList.InsertEvent(G2.arrivalA, G2.time - (1.0/150)*Math.log(slump.nextDouble())); 				
		} break;
		case G2.departureA:{
			System.out.println("Departure A" + G2.time);
			AinQueue--;
			EventList.InsertEvent(G2.arrivalB, G2.time + d);
			if (BinQueue > 0){
				EventList.InsertEvent(G2.departureB, G2.time + xB);
			}
			if (AinQueue > 0){
				EventList.InsertEvent(G2.departureA, G2.time + xA);
				System.out.println("Departure A found A in queue" + G2.time);
			}
		} break;
		case G2.departureB:{
			BinQueue--;
			if (BinQueue > 0){
				EventList.InsertEvent(G2.departureB, G2.time + xB);
			}
		} break;
		case G2.MEASURE:{
			noMeasurements++;
			accumulated = accumulated + AinQueue + BinQueue;
			EventList.InsertEvent(G2.MEASURE, G2.time + 0.1);
			//W.println(String.valueOf(numberInQueue1));
		} break;
		}
	}
}